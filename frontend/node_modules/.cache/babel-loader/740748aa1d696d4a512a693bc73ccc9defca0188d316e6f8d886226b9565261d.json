{"ast":null,"code":"import{createContext,useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const INITIAL_STATE={city:undefined,dates:[],options:{adult:undefined,children:undefined,room:undefined}};export const SearchContext=/*#__PURE__*/createContext(INITIAL_STATE);const SearchReducer=(state,action)=>{switch(action.type){case\"NEW_SEARCH\":return action.payload;case\"RESET_SEARCH\":return INITIAL_STATE;default:return state;}};// SearchReducer: This is a reducer function that takes the current state and an action, and returns a new state based on the action type.\n// If the action type is \"NEW_SEARCH\", it returns the payload of the action, which should be the new search state.\n// If the action type is \"RESET_SEARCH\", it returns the initial state, effectively resetting the search state.\n// The default case returns the current state if the action type is not recognized.\nexport const SearchContextProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(SearchReducer,INITIAL_STATE);//   useReducer Hook:\n// This hook takes the reducer function (SearchReducer) and the initial state (INITIAL_STATE) as arguments.\n// It returns the current state (state) and a dispatch function (dispatch) to send actions to the reducer.\n// Providing State and Dispatch:\n// The provider component (SearchContext.Provider) wraps its children, making the state and dispatch function available to any ne\n//sted components that need them.\n// The value prop of SearchContext.Provider includes the current state properties (city, dates, options) and the dispatch function.\nreturn/*#__PURE__*/_jsx(SearchContext.Provider,{value:{city:state.city,dates:state.dates,options:state.options,dispatch},children:children});};","map":{"version":3,"names":["createContext","useReducer","jsx","_jsx","INITIAL_STATE","city","undefined","dates","options","adult","children","room","SearchContext","SearchReducer","state","action","type","payload","SearchContextProvider","_ref","dispatch","Provider","value"],"sources":["C:/Users/NIDHI/Desktop/WebSite Booking/frontend/src/context/SearchContext.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\n\nconst INITIAL_STATE = {\n  city: undefined,\n  dates: [],\n  options: {\n    adult: undefined,\n    children: undefined,\n    room: undefined,\n  },\n};\n\nexport const SearchContext = createContext(INITIAL_STATE);\n\nconst SearchReducer = (state, action) => {\n  switch (action.type) {\n    case \"NEW_SEARCH\":\n      return action.payload;\n    case \"RESET_SEARCH\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n// SearchReducer: This is a reducer function that takes the current state and an action, and returns a new state based on the action type.\n// If the action type is \"NEW_SEARCH\", it returns the payload of the action, which should be the new search state.\n// If the action type is \"RESET_SEARCH\", it returns the initial state, effectively resetting the search state.\n// The default case returns the current state if the action type is not recognized.\nexport const SearchContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(SearchReducer, INITIAL_STATE);\n\n//   useReducer Hook:\n// This hook takes the reducer function (SearchReducer) and the initial state (INITIAL_STATE) as arguments.\n// It returns the current state (state) and a dispatch function (dispatch) to send actions to the reducer.\n// Providing State and Dispatch:\n// The provider component (SearchContext.Provider) wraps its children, making the state and dispatch function available to any ne\n//sted components that need them.\n// The value prop of SearchContext.Provider includes the current state properties (city, dates, options) and the dispatch function.\n  return (\n    <SearchContext.Provider\n      value={{\n        city: state.city,\n        dates: state.dates,\n        options: state.options,\n        dispatch,\n      }}\n    >\n      {children}\n    </SearchContext.Provider>\n  );\n};"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,aAAa,CAAG,CACpBC,IAAI,CAAEC,SAAS,CACfC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,CACPC,KAAK,CAAEH,SAAS,CAChBI,QAAQ,CAAEJ,SAAS,CACnBK,IAAI,CAAEL,SACR,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,aAAa,cAAGZ,aAAa,CAACI,aAAa,CAAC,CAEzD,KAAM,CAAAS,aAAa,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACvC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,YAAY,CACf,MAAO,CAAAD,MAAM,CAACE,OAAO,CACvB,IAAK,cAAc,CACjB,MAAO,CAAAb,aAAa,CACtB,QACE,MAAO,CAAAU,KAAK,CAChB,CACF,CAAC,CACD;AACA;AACA;AACA;AACA,MAAO,MAAM,CAAAI,qBAAqB,CAAGC,IAAA,EAAkB,IAAjB,CAAET,QAAS,CAAC,CAAAS,IAAA,CAChD,KAAM,CAACL,KAAK,CAAEM,QAAQ,CAAC,CAAGnB,UAAU,CAACY,aAAa,CAAET,aAAa,CAAC,CAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACE,mBACED,IAAA,CAACS,aAAa,CAACS,QAAQ,EACrBC,KAAK,CAAE,CACLjB,IAAI,CAAES,KAAK,CAACT,IAAI,CAChBE,KAAK,CAAEO,KAAK,CAACP,KAAK,CAClBC,OAAO,CAAEM,KAAK,CAACN,OAAO,CACtBY,QACF,CAAE,CAAAV,QAAA,CAEDA,QAAQ,CACa,CAAC,CAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}